{"version":3,"sources":["BooksAPI.js","ShelfChanger.js","Book.js","ListBookShelfs.js","SearchBooks.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","concat","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","search","query","data","books","ShelfChanger","updateShelf","event","_this","props","target","value","currentShelf","this","react_default","a","createElement","onChange","defaultValue","disabled","Component","Book","_this$props","key","className","style","width","height","backgroundImage","imageLinks","thumbnail","src_ShelfChanger","title","authors","map","author","index","ListBookShelfs","_ref","currently_reading","want_to_read","read","src_Book","Link","to","SearchBooks","state","showingBooks","updateQuery","setState","searchBook","trim","length","checkBook","clearQuery","_this$state","type","placeholder","BooksApp","all_books","stBook","console","log","updatedBook","BooksAPI","prevState","cuRe","filter","waRe","re","_this2","_this3","Route","exact","path","render","src_ListBookShelfs","history","src_SearchBooks","React","ReactDOM","BrowserRouter","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.ff1286a0.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nclass ShelfChanger extends Component{\n\tstatic propTypes = {\n\t\tbook: PropTypes.object.isRequired,\n\t\tupdateShelf:PropTypes.func.isRequired,\n\t\tcurrentShelf:PropTypes.string.isRequired\n\t}\n\tupdateShelf = event =>{\n    \tthis.props.updateShelf(this.props.book, event.target.value);\n\t}\n\n\n\trender (){\n\t\tconst {currentShelf} = this.props\n\t\treturn(\n\t\t\t<select onChange={this.updateShelf} defaultValue={currentShelf}>\n\t\t\t\t<option value=\"move\" disabled>Move to...</option>\n\t\t\t\t<option value=\"currentlyReading\">Currently Reading</option>\n\t\t\t\t<option value=\"wantToRead\">Want to Read</option>\n\t\t\t\t<option value=\"read\">Read</option>\n\t\t\t\t<option value=\"none\">None</option>\n\t\t\t</select>\n\t\t)\n\t}\n}\nexport default ShelfChanger","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport ShelfChanger from './ShelfChanger'\nclass Book extends Component{\n\tstatic propTypes = {\n\t\tbook: PropTypes.object.isRequired,\n\t\tupdateShelf:PropTypes.func.isRequired\n\t}\n\t\n\trender (){\n\t\tconst {book,updateShelf} = this.props\n\n\t\treturn(\n\t\t\t<li key={book.id}>\n\t      \t\t<div className=\"book\">\n\t        \t<div className=\"book-top\">\n\t          \t<div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage:`url(${book.imageLinks && book.imageLinks.thumbnail ? book.imageLinks.thumbnail : ''})` }}></div>\n\t\t          <div className=\"book-shelf-changer\">\n\t\t          \t<ShelfChanger book={book} updateShelf={updateShelf} currentShelf={book.shelf || 'none'}/>\n\t\t          </div>\n\t\t        </div>\n\t\t        <div className=\"book-title\">{book.title}</div>\n\t\t        {book.authors && book.authors.map((author,index) => (\n\t\t        \t<div className=\"book-authors\" key = {index}>\n\t\t        \t{author}\n\t\t        \t</div>\n\t\t        \t))}\n\t\t      </div>\n\t\t    </li>\n\t\t)\n\t}\n}\nexport default Book","import React from 'react';\nimport PropTypes from 'prop-types'\nimport Book from './Book'\nimport { Link } from 'react-router-dom'\nconst ListBookShelfs = ({currently_reading,want_to_read,read,updateShelf}) => {\n  //const { currently_reading,want_to_read,read,updateShelf} = props\n    //let showing_currently_reading, showing_want_to_read,showing_read\n    return(<div className=\"list-books\">\n      <div className=\"list-books-title\">\n        <h1>MyReads</h1>\n      </div>\n      <div className=\"list-books-content\">\n        <div>\n          <div className=\"bookshelf\">\n            <h2 className=\"bookshelf-title\">Currently Reading</h2>\n            <div className=\"bookshelf-books\">\n              <ol className=\"books-grid\">\n                {currently_reading.map((book) => (\n                  <Book book={book} key={book.id} updateShelf={updateShelf}/>\n                ))}\n              </ol>\n            </div>\n          </div>\n          <div className=\"bookshelf\">\n            <h2 className=\"bookshelf-title\">Want to Read</h2>\n            <div className=\"bookshelf-books\">\n              <ol className=\"books-grid\">\n                {want_to_read.map((book) => (\n                  <Book book={book} key={book.id} updateShelf={updateShelf}/>\n                ))}\n              </ol>\n            </div>\n          </div>\n          <div className=\"bookshelf\">\n            <h2 className=\"bookshelf-title\">Read</h2>\n            <div className=\"bookshelf-books\">\n              <ol className=\"books-grid\">\n                {read.map((book) => (\n                <Book book={book} key={book.id} updateShelf={updateShelf}/>\n                ))}            \n              </ol>\n            </div>\n          </div>\n        </div>\n      </div>\n            <div className=\"open-search\">\n              <Link to={'/search'}>\n              <button>Add a book</button>\n              </Link>\n            </div>\n          </div>)\n};\nListBookShelfs.propTypes = {\n  currently_reading: PropTypes.array.isRequired,\n  want_to_read: PropTypes.array.isRequired,\n  read: PropTypes.array.isRequired,\n  updateShelf:PropTypes.func.isRequired\n}\n\nexport default ListBookShelfs","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport Book from './Book'\n\nclass SearchBooks extends Component{\n  state={\n    query:'',\n    showingBooks:[]\n  }\n\n  static propTypes = {\n    updateShelf:PropTypes.func.isRequired,\n    searchBook:PropTypes.func.isRequired,\n    checkBook:PropTypes.func.isRequired\n  }\n\n  updateQuery = event => {\n    const query = event.target.value\n    this.setState({ query: query})\n    if(query){\n      this.props.searchBook(query.trim()).then(books => {\n        if(books.length >0){\n          books.map((book) => (\n            this.props.checkBook(book)\n          ))\n          this.setState({showingBooks: books})\n        }\n        else\n          this.setState({showingBooks: []})\n      })\n    }\n    else\n      this.setState({showingBooks: []})\n  }\n\n  clearQuery = () => {\n    this.setState({ query: '' })\n  }\n\n  render (){\n    const {updateShelf,searchBook,checkBook} = this.props\n    const {query,showingBooks} = this.state\n    return (\n      <div className=\"search-books\">\n        <div className=\"search-books-bar\">\n          <Link to='/'>\n            <button className=\"close-search\">Close</button>\n          </Link>\n          <div className=\"search-books-input-wrapper\">\n            <input \n              type=\"text\" \n              placeholder=\"Search by title or author\"\n              value={query}\n              onChange={this.updateQuery}\n            />\n          </div>\n        </div>\n        <div className=\"search-books-results\">\n          <div className=\"bookshelf-books\">\n              <ol className=\"books-grid\">\n                {showingBooks.map((book) => (\n                  <Book book={book} key={book.id} updateShelf={updateShelf} checkBook={checkBook}/>\n                ))}\n              </ol>\n            </div>\n        </div>\n      </div>\n  )}}\nexport default SearchBooks","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport * as BooksAPI from './BooksAPI'\nimport './App.css'\nimport ListBookShelfs from './ListBookShelfs'\nimport SearchBooks from './SearchBooks'\nclass BooksApp extends React.Component {\n  state = {\n    currently_reading:[],\n    want_to_read:[],\n    read:[],\n    all_books:[]\n  }\n  \n  componentDidMount() {\n    BooksAPI.getAll().then((book => {\n      this.setState({ currently_reading:book.filter(book => book.shelf === 'currentlyReading'),\n      want_to_read:book.filter(book => book.shelf === 'wantToRead'),\n      read:book.filter(book => book.shelf === 'read'),\n      all_books:book\n     })\n     \n    }))\n  }\n\n  checkBook = (book) => {\n    this.state.want_to_read.map((stBook) => {\n      if(stBook.id === book.id){\n        console.log('mudou')\n        book.shelf = stBook.shelf\n      }\n    })\n    this.state.currently_reading.map((stBook) => {\n      if(stBook.id === book.id){\n        console.log('mudou')\n        book.shelf = stBook.shelf\n      }\n    })\n    this.state.read.map((stBook) => {\n      if(stBook.id === book.id){\n        console.log('mudou')\n        book.shelf = stBook.shelf\n      }\n    })\n  }\n\n  updateShelf = (updatedBook,shelf) =>{\n    BooksAPI.update(updatedBook,shelf)\n    updatedBook.shelf = shelf;\n    this.setState(prevState => {\n      var cuRe= prevState.currently_reading.filter(book => book.id !== updatedBook.id);\n      var waRe= prevState.want_to_read.filter(book => book.id !== updatedBook.id);\n      var re= prevState.read.filter(book => book.id !== updatedBook.id);\n      switch(shelf){\n        case 'currentlyReading':\n          cuRe= prevState.currently_reading.concat(updatedBook)\n          break;\n        case 'wantToRead':\n          waRe= prevState.want_to_read.concat(updatedBook)\n          break;\n        case 'read':\n          re= prevState.read.concat(updatedBook)\n          break;\n        default:\n          break;\n      };\n      return {currently_reading:cuRe,want_to_read:waRe,read:re, all_books:prevState.all_books};\n    });\n  };\n  render() {\n    return (\n      <div>\n        <Route exact path='/' render={() => (\n          <ListBookShelfs\n          currently_reading={this.state.currently_reading}\n          want_to_read={this.state.want_to_read}\n          read={this.state.read}\n          updateShelf={this.updateShelf}\n          />  \n        )}/>\n        <Route path='/search' render={({ history }) => (\n          <SearchBooks\n            updateShelf={this.updateShelf}\n            searchBook={BooksAPI.search}\n            checkBook={this.checkBook}\n          />\n        )}/>\n      </div>\n    )\n  }\n}\n\nexport default BooksApp\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport { BrowserRouter } from 'react-router-dom'\nReactDOM.render(\n  <BrowserRouter><App /></BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}