{"ast":null,"code":"import _classCallCheck from \"/home/gedanken01/Desktop/React/MyReads/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/gedanken01/Desktop/React/MyReads/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/gedanken01/Desktop/React/MyReads/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/gedanken01/Desktop/React/MyReads/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/gedanken01/Desktop/React/MyReads/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/gedanken01/Desktop/React/MyReads/src/App.js\";\nimport React from 'react';\nimport * as BooksAPI from './BooksAPI';\nimport './App.css';\nimport { Route } from 'react-router-dom';\nimport ListBookShelfs from './ListBookShelfs';\nimport SearchBooks from './SearchBooks';\n\nvar BooksApp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BooksApp, _React$Component);\n\n  function BooksApp() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BooksApp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BooksApp)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      currently_reading: [],\n      want_to_read: [],\n      read: [],\n      all_books: []\n    };\n\n    _this.searchBook = function (query) {\n      BooksAPI.search(query);\n    };\n\n    _this.updateShelf = function (updatedBook, shelf) {\n      BooksAPI.update(updatedBook, shelf).then(function (response) {\n        updatedBook.shelf = shelf;\n\n        _this.setState(function (prevState) {\n          var cuRe = prevState.currently_reading.filter(function (book) {\n            return book.id !== updatedBook.id;\n          });\n          var waRe = prevState.want_to_read.filter(function (book) {\n            return book.id !== updatedBook.id;\n          });\n          var re = prevState.read.filter(function (book) {\n            return book.id !== updatedBook.id;\n          });\n\n          if (updatedBook.shelf === shelf) {\n            return {\n              currently_reading: cuRe,\n              want_to_read: waRe,\n              read: re\n            };\n          }\n\n          switch (shelf) {\n            case 'currentlyReading':\n              cuRe = prevState.currently_reading.concat(updatedBook);\n              break;\n\n            case 'wantToRead':\n              waRe = prevState.want_to_read.concat(updatedBook);\n              break;\n\n            case 'read':\n              re = prevState.read.concat(updatedBook);\n              break;\n\n            default:\n              break;\n          }\n\n          ;\n          return {\n            currently_reading: cuRe,\n            want_to_read: waRe,\n            read: re\n          };\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(BooksApp, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var _this2 = this;\n\n      BooksAPI.getAll().then(function (book) {\n        //this.setState({ currently_reading:book})\n        _this2.setState({\n          currently_reading: book.filter(function (book) {\n            return book.shelf === 'currentlyReading';\n          })\n        });\n\n        _this2.setState({\n          want_to_read: book.filter(function (book) {\n            return book.shelf === 'wantToRead';\n          })\n        });\n\n        _this2.setState({\n          read: book.filter(function (book) {\n            return book.shelf === 'read';\n          })\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      BooksAPI.getAll().then(function (book) {\n        _this3.setState({\n          currently_reading: book.filter(function (book) {\n            return book.shelf === 'currentlyReading';\n          })\n        });\n\n        _this3.setState({\n          want_to_read: book.filter(function (book) {\n            return book.shelf === 'wantToRead';\n          })\n        });\n\n        _this3.setState({\n          read: book.filter(function (book) {\n            return book.shelf === 'read';\n          })\n        });\n\n        _this3.setState({\n          all_books: book\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render() {\n          return React.createElement(ListBookShelfs, {\n            currently_reading: _this4.state.currently_reading,\n            want_to_read: _this4.state.want_to_read,\n            read: _this4.state.read,\n            updateShelf: _this4.updateShelf,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/search\",\n        render: function render(_ref) {\n          var history = _ref.history;\n          return React.createElement(SearchBooks //all_books={this.state.all_books}\n          , {\n            updateShelf: _this4.updateShelf,\n            searchBook: _this4.searchBook,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return BooksApp;\n}(React.Component);\n\nexport default BooksApp;","map":{"version":3,"sources":["/home/gedanken01/Desktop/React/MyReads/src/App.js"],"names":["React","BooksAPI","Route","ListBookShelfs","SearchBooks","BooksApp","state","currently_reading","want_to_read","read","all_books","searchBook","query","search","updateShelf","updatedBook","shelf","update","then","response","setState","prevState","cuRe","filter","book","id","waRe","re","concat","getAll","history","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport * as BooksAPI from './BooksAPI'\nimport './App.css'\nimport { Route } from 'react-router-dom'\nimport ListBookShelfs from './ListBookShelfs'\nimport SearchBooks from './SearchBooks'\nclass BooksApp extends React.Component {\n  state = {\n    currently_reading:[],\n    want_to_read:[],\n    read:[],\n    all_books:[]\n  }\n  componentDidUpdate(){\n    BooksAPI.getAll().then((book => {\n      //this.setState({ currently_reading:book})\n      this.setState({ currently_reading:book.filter(book => book.shelf === 'currentlyReading') })\n      this.setState({ want_to_read:book.filter(book => book.shelf === 'wantToRead') })\n      this.setState({ read:book.filter(book => book.shelf === 'read') })\n    }))\n  }\n  componentDidMount() {\n    BooksAPI.getAll().then((book => {\n      this.setState({ currently_reading:book.filter(book => book.shelf === 'currentlyReading') })\n      this.setState({ want_to_read:book.filter(book => book.shelf === 'wantToRead') })\n      this.setState({ read:book.filter(book => book.shelf === 'read') })\n      this.setState({all_books:book})\n    }))\n  }\n  searchBook = (query) => {\n    BooksAPI.search(query)\n  }\n  updateShelf = (updatedBook,shelf) =>{\n    BooksAPI.update(updatedBook,shelf).then(response => {\n      updatedBook.shelf = shelf;\n      this.setState(prevState => {\n        var cuRe= prevState.currently_reading.filter(book => book.id !== updatedBook.id);\n        var waRe= prevState.want_to_read.filter(book => book.id !== updatedBook.id);\n        var re= prevState.read.filter(book => book.id !== updatedBook.id);\n        if(updatedBook.shelf===shelf){\n          return {currently_reading:cuRe,want_to_read:waRe,read:re};\n        }\n        switch(shelf){\n          case 'currentlyReading':\n            cuRe= prevState.currently_reading.concat(updatedBook)\n            break;\n          case 'wantToRead':\n            waRe= prevState.want_to_read.concat(updatedBook)\n            break;\n          case 'read':\n            re= prevState.read.concat(updatedBook)\n            break;\n          default:\n            break;\n        };\n        return {currently_reading:cuRe,want_to_read:waRe,read:re};\n      });\n    });\n  };\n  render() {\n    return (\n      <div>\n        <Route exact path='/' render={() => (\n          <ListBookShelfs\n          currently_reading={this.state.currently_reading}\n          want_to_read={this.state.want_to_read}\n          read={this.state.read}\n          updateShelf={this.updateShelf}\n          />  \n        )}/>\n        <Route path='/search' render={({ history }) => (\n          <SearchBooks\n            //all_books={this.state.all_books}\n            updateShelf={this.updateShelf}\n            searchBook={this.searchBook}\n          />\n        )}/>\n      </div>\n    )\n  }\n}\n\nexport default BooksApp\n"]},"metadata":{},"sourceType":"module"}