{"ast":null,"code":"import _classCallCheck from \"/home/gedanken01/Desktop/React/MyReads/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/gedanken01/Desktop/React/MyReads/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/gedanken01/Desktop/React/MyReads/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/gedanken01/Desktop/React/MyReads/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/gedanken01/Desktop/React/MyReads/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/gedanken01/Desktop/React/MyReads/src/ShelfChanger.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar ShelfChanger =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ShelfChanger, _Component);\n\n  function ShelfChanger() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ShelfChanger);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ShelfChanger)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.updateShelf = function (event) {\n      return _this.props.updateShelf(_this.props.book, event.target.value);\n    };\n\n    return _this;\n  }\n\n  _createClass(ShelfChanger, [{\n    key: \"render\",\n    value: function render() {\n      //const {updateShelf,currentShelf} = this.props\n      return React.createElement(\"select\", {\n        onChange: this.bind.updateShelf,\n        defaultValue: this.bind.currentShelf,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"move\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"Move to...\"), React.createElement(\"option\", {\n        value: \"currentlyReading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"Currently Reading\"), React.createElement(\"option\", {\n        value: \"wantToRead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"Want to Read\"), React.createElement(\"option\", {\n        value: \"read\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"Read\"), React.createElement(\"option\", {\n        value: \"none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"None\"));\n    }\n  }]);\n\n  return ShelfChanger;\n}(Component);\n\nShelfChanger.propTypes = {\n  book: PropTypes.object.isRequired,\n  updateShelf: PropTypes.func.isRequired,\n  currentShelf: PropTypes.string.isRequired\n};\nexport default ShelfChanger;","map":{"version":3,"sources":["/home/gedanken01/Desktop/React/MyReads/src/ShelfChanger.js"],"names":["React","Component","PropTypes","ShelfChanger","updateShelf","event","props","book","target","value","bind","currentShelf","propTypes","object","isRequired","func","string"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;IACMC,Y;;;;;;;;;;;;;;;;;;UAMLC,W,GAAc,UAAAC,KAAK;AAAA,aAChB,MAAKC,KAAL,CAAWF,WAAX,CAAuB,MAAKE,KAAL,CAAWC,IAAlC,EAAwCF,KAAK,CAACG,MAAN,CAAaC,KAArD,CADgB;AAAA,K;;;;;;;6BAGV;AACR;AACA,aACC;AAAQ,QAAA,QAAQ,EAAE,KAAKC,IAAL,CAAUN,WAA5B;AAAyC,QAAA,YAAY,EAAE,KAAKM,IAAL,CAAUC,YAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAqB,QAAA,QAAQ,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD,EAEC;AAAQ,QAAA,KAAK,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFD,EAGC;AAAQ,QAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHD,EAIC;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJD,EAKC;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALD,CADD;AASA;;;;EApByBV,S;;AAArBE,Y,CACES,S,GAAY;AAClBL,EAAAA,IAAI,EAAEL,SAAS,CAACW,MAAV,CAAiBC,UADL;AAElBV,EAAAA,WAAW,EAACF,SAAS,CAACa,IAAV,CAAeD,UAFT;AAGlBH,EAAAA,YAAY,EAACT,SAAS,CAACc,MAAV,CAAiBF;AAHZ,C;AAqBpB,eAAeX,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nclass ShelfChanger extends Component{\n\tstatic propTypes = {\n\t\tbook: PropTypes.object.isRequired,\n\t\tupdateShelf:PropTypes.func.isRequired,\n\t\tcurrentShelf:PropTypes.string.isRequired\n\t}\n\tupdateShelf = event =>\n    this.props.updateShelf(this.props.book, event.target.value);\n\n\trender (){\n\t\t//const {updateShelf,currentShelf} = this.props\n\t\treturn(\n\t\t\t<select onChange={this.bind.updateShelf} defaultValue={this.bind.currentShelf}>\n\t\t\t\t<option value=\"move\" disabled>Move to...</option>\n\t\t\t\t<option value=\"currentlyReading\">Currently Reading</option>\n\t\t\t\t<option value=\"wantToRead\">Want to Read</option>\n\t\t\t\t<option value=\"read\">Read</option>\n\t\t\t\t<option value=\"none\">None</option>\n\t\t\t</select>\n\t\t)\n\t}\n}\nexport default ShelfChanger"]},"metadata":{},"sourceType":"module"}