{"ast":null,"code":"import _classCallCheck from \"/home/gedanken01/Desktop/React/MyReads/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/gedanken01/Desktop/React/MyReads/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/gedanken01/Desktop/React/MyReads/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/gedanken01/Desktop/React/MyReads/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/gedanken01/Desktop/React/MyReads/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/gedanken01/Desktop/React/MyReads/src/ShelfChanger.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar ShelfChanger =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ShelfChanger, _Component);\n\n  function ShelfChanger() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ShelfChanger);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ShelfChanger)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.updateShelf = function (event) {\n      _this.props.updateShelf(_this.props.book, event.target.value);\n    };\n\n    return _this;\n  }\n\n  _createClass(ShelfChanger, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var _this2 = this;\n\n      BooksAPI.getAll().then(function (book) {\n        //this.setState({ currently_reading:book})\n        _this2.setState({\n          currently_reading: book.filter(function (book) {\n            return book.shelf === 'currentlyReading';\n          })\n        });\n\n        _this2.setState({\n          want_to_read: book.filter(function (book) {\n            return book.shelf === 'wantToRead';\n          })\n        });\n\n        _this2.setState({\n          read: book.filter(function (book) {\n            return book.shelf === 'read';\n          })\n        });\n\n        _this2.setState({\n          all_books: book\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var currentShelf = this.props.currentShelf;\n      return React.createElement(\"select\", {\n        onChange: this.updateShelf,\n        defaultValue: currentShelf,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"move\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Move to...\"), React.createElement(\"option\", {\n        value: \"currentlyReading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Currently Reading\"), React.createElement(\"option\", {\n        value: \"wantToRead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"Want to Read\"), React.createElement(\"option\", {\n        value: \"read\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"Read\"), React.createElement(\"option\", {\n        value: \"none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"None\"));\n    }\n  }]);\n\n  return ShelfChanger;\n}(Component);\n\nShelfChanger.propTypes = {\n  book: PropTypes.object.isRequired,\n  updateShelf: PropTypes.func.isRequired,\n  currentShelf: PropTypes.string.isRequired\n};\nexport default ShelfChanger;","map":{"version":3,"sources":["/home/gedanken01/Desktop/React/MyReads/src/ShelfChanger.js"],"names":["React","Component","PropTypes","ShelfChanger","updateShelf","event","props","book","target","value","BooksAPI","getAll","then","setState","currently_reading","filter","shelf","want_to_read","read","all_books","currentShelf","propTypes","object","isRequired","func","string"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;IACMC,Y;;;;;;;;;;;;;;;;;;UAMLC,W,GAAc,UAAAC,KAAK,EAAG;AAClB,YAAKC,KAAL,CAAWF,WAAX,CAAuB,MAAKE,KAAL,CAAWC,IAAlC,EAAwCF,KAAK,CAACG,MAAN,CAAaC,KAArD;AACH,K;;;;;;;yCAEmB;AAAA;;AACjBC,MAAAA,QAAQ,CAACC,MAAT,GAAkBC,IAAlB,CAAwB,UAAAL,IAAI,EAAI;AAC9B;AACA,QAAA,MAAI,CAACM,QAAL,CAAc;AAAEC,UAAAA,iBAAiB,EAACP,IAAI,CAACQ,MAAL,CAAY,UAAAR,IAAI;AAAA,mBAAIA,IAAI,CAACS,KAAL,KAAe,kBAAnB;AAAA,WAAhB;AAApB,SAAd;;AACA,QAAA,MAAI,CAACH,QAAL,CAAc;AAAEI,UAAAA,YAAY,EAACV,IAAI,CAACQ,MAAL,CAAY,UAAAR,IAAI;AAAA,mBAAIA,IAAI,CAACS,KAAL,KAAe,YAAnB;AAAA,WAAhB;AAAf,SAAd;;AACA,QAAA,MAAI,CAACH,QAAL,CAAc;AAAEK,UAAAA,IAAI,EAACX,IAAI,CAACQ,MAAL,CAAY,UAAAR,IAAI;AAAA,mBAAIA,IAAI,CAACS,KAAL,KAAe,MAAnB;AAAA,WAAhB;AAAP,SAAd;;AACA,QAAA,MAAI,CAACH,QAAL,CAAc;AAACM,UAAAA,SAAS,EAACZ;AAAX,SAAd;AACD,OAND;AAOD;;;6BAEO;AAAA,UACDa,YADC,GACe,KAAKd,KADpB,CACDc,YADC;AAER,aACC;AAAQ,QAAA,QAAQ,EAAE,KAAKhB,WAAvB;AAAoC,QAAA,YAAY,EAAEgB,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAqB,QAAA,QAAQ,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD,EAEC;AAAQ,QAAA,KAAK,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFD,EAGC;AAAQ,QAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHD,EAIC;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJD,EAKC;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALD,CADD;AASA;;;;EA/ByBnB,S;;AAArBE,Y,CACEkB,S,GAAY;AAClBd,EAAAA,IAAI,EAAEL,SAAS,CAACoB,MAAV,CAAiBC,UADL;AAElBnB,EAAAA,WAAW,EAACF,SAAS,CAACsB,IAAV,CAAeD,UAFT;AAGlBH,EAAAA,YAAY,EAAClB,SAAS,CAACuB,MAAV,CAAiBF;AAHZ,C;AAgCpB,eAAepB,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nclass ShelfChanger extends Component{\n\tstatic propTypes = {\n\t\tbook: PropTypes.object.isRequired,\n\t\tupdateShelf:PropTypes.func.isRequired,\n\t\tcurrentShelf:PropTypes.string.isRequired\n\t}\n\tupdateShelf = event =>{\n    \tthis.props.updateShelf(this.props.book, event.target.value);\n\t}\n\n\tcomponentDidUpdate(){\n    BooksAPI.getAll().then((book => {\n      //this.setState({ currently_reading:book})\n      this.setState({ currently_reading:book.filter(book => book.shelf === 'currentlyReading') })\n      this.setState({ want_to_read:book.filter(book => book.shelf === 'wantToRead') })\n      this.setState({ read:book.filter(book => book.shelf === 'read') })\n      this.setState({all_books:book})\n    }))\n  }\n\t\n\trender (){\n\t\tconst {currentShelf} = this.props\n\t\treturn(\n\t\t\t<select onChange={this.updateShelf} defaultValue={currentShelf}>\n\t\t\t\t<option value=\"move\" disabled>Move to...</option>\n\t\t\t\t<option value=\"currentlyReading\">Currently Reading</option>\n\t\t\t\t<option value=\"wantToRead\">Want to Read</option>\n\t\t\t\t<option value=\"read\">Read</option>\n\t\t\t\t<option value=\"none\">None</option>\n\t\t\t</select>\n\t\t)\n\t}\n}\nexport default ShelfChanger"]},"metadata":{},"sourceType":"module"}